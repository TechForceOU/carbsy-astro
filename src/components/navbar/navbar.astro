---
// @ts-nocheck
import Container from "@components/container.astro";
import Link from "@components/ui/link.astro";
import Dropdown from "./dropdown.astro";
import AppStoreButton from "@components/ui/app-store-button.astro";
import GooglePlayButton from "@components/ui/google-play-button.astro";
import { StickyHeader, Astronav, MenuItems, MenuIcon } from "astro-navbar";

const menuitems = [
  {
    title: "About",
    path: "/about",
  },
  {
    title: "Backlog",
    path: "https://carbsy.featurebase.app/",
  },
  {
    title: "Contact",
    path: "/contact",
  },
];
---

<StickyHeader
  class="sticky top-0 border-b z-20 transition-all"
  scrollY={130}
  defaultClass="py-5 border-transparent"
  activeClass="py-2 bg-white/80 border-gray-200 backdrop-blur-lg"
>
  <Container>
    <div
      class="flex flex-col lg:flex-row justify-between items-center relative z-10"
      transition:animate="none"
    >
      <Astronav>
        <div class="flex w-full lg:w-auto items-center justify-between">
          <a
            href="/"
            class="text-2xl text-brand-accent font-semibold flex items-center transition focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-brand-accent focus-visible:outline-none focus-visible:shadow-outline-brand-accent rounded-full px-2 -ml-2"
            >
            <img src="/src/assets/icon.png" alt="Carbsy logo" class="w-12 h-12 mr-2" />
            Carbsy
          </a>
          <div class="block lg:hidden">
            <MenuIcon class="w-4 h-4 text-gray-800" />
          </div>
        </div>
        <MenuItems class="hidden w-full lg:w-auto mt-2 lg:flex lg:mt-0">
          <ul class="flex flex-col lg:flex-row lg:gap-3">
            {
              menuitems.map((item, index) => (
                <>
                  {item.children && (
                    <Dropdown
                      title={item.title}
                      children={item.children}
                      lastItem={index === menuitems.length - 1}
                    />
                  )}

                  {!item.children && (
                    <li>
                      <a
                        href={item.path}
                        class="flex lg:px-3 py-2 text-sm text-gray-600 hover:text-brand-accent focus-visible:ring-2 focus-visible:ring-offset-2 transition focus-visible:ring-brand-accent focus-visible:outline-none focus-visible:shadow-outline-brand-accent rounded-full"
                      >
                        {item.title}
                      </a>
                    </li>
                  )}
                </>
              ))
            }
          </ul>
          <div class="lg:hidden flex items-center mt-3 gap-4">
            <AppStoreButton class="h-8" />
            <GooglePlayButton class="h-8" />
          </div>
        </MenuItems>
      </Astronav>
      <div>
        <div class="hidden lg:flex items-center gap-4">
          <AppStoreButton />
          <GooglePlayButton />
        </div>
      </div>
    </div>
  </Container>
</StickyHeader>

<!--
<script>
  // @ts-nocheck
  let lastKnownScrollPosition = 0;
  let ticking = false;
  const header = document.querySelector(".astronav-sticky-header");
  const animDiv = header.querySelector(".padding-anim");
  const defaultClass = "py-[20px] border-transparent";
  const activeClass = "py-[8px] bg-white border-gray-200";

  // Define two different scroll positions
  const addScrollY = 100;   // Scroll position to add active class
  const removeScrollY = 50; // Scroll position to remove active class

  function updateAnimation(scrollPos) {
    if (scrollPos > addScrollY) {
      animDiv.classList.remove(...defaultClass.split(" "));
      animDiv.classList.add("is-active", ...activeClass.split(" "));
      animDiv.setAttribute("active", "");
    } else if (scrollPos < removeScrollY) {
      animDiv.classList.remove("is-active", ...activeClass.split(" "));
      animDiv.classList.add(...defaultClass.split(" "));
      animDiv.removeAttribute("active");
    }
  }

  window.addEventListener("scroll", function () {
    lastKnownScrollPosition = window.scrollY;

    if (!ticking) {
      window.requestAnimationFrame(function () {
        updateAnimation(lastKnownScrollPosition);
        ticking = false;
      });

      ticking = true;
    }
  });
</script> -->
